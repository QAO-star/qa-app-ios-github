name: Build and Deploy iOS to App Store

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger
  release:
    types: [published]  # Triggers when a release is published

env:
  NODE_VERSION: '18'
  XCODE_VERSION: '15.2'

jobs:
  build-and-deploy-ios:
    runs-on: macos-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper versioning
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        npm install -g @capacitor/cli
    
    - name: Setup iOS platform
      run: |
        # Remove existing iOS platform if incomplete
        if [ -d "ios" ] && [ ! -f "ios/App/Podfile" ]; then
          echo "Removing incomplete iOS platform..."
          rm -rf ios
        fi
        
        # Add iOS platform if it doesn't exist
        if [ ! -d "ios/App/App.xcworkspace" ]; then
          echo "Adding iOS platform..."
          npx cap add ios
        fi
    
    - name: Sync Capacitor
      run: npx cap sync ios
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
    
    - name: Setup code signing environment
      run: |
        # Create a temporary keychain for the build
        security create-keychain -p "" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-keychain-settings build.keychain
        
        # Show available signing identities
        echo "Available signing identities:"
        security find-identity -v -p codesigning
        
        # Set environment variables for code signing
        export CODE_SIGN_KEYCHAIN=build.keychain
        export CODE_SIGN_STYLE=Automatic
    
    - name: Configure manual signing (no code signing)
      run: |
        # Disable code signing for all targets
        cd ios/App
        
        # Update the main app project
        sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' App.xcodeproj/project.pbxproj
        sed -i '' 's/CODE_SIGN_STYLE = "Automatic";/CODE_SIGN_STYLE = "Manual";/g' App.xcodeproj/project.pbxproj
        sed -i '' 's/CODE_SIGNING_REQUIRED = YES;/CODE_SIGNING_REQUIRED = NO;/g' App.xcodeproj/project.pbxproj
        sed -i '' 's/CODE_SIGNING_ALLOWED = YES;/CODE_SIGNING_ALLOWED = NO;/g' App.xcodeproj/project.pbxproj
        
        # Update the Pods project if it exists
        if [ -f "Pods/Pods.xcodeproj/project.pbxproj" ]; then
            sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' Pods/Pods.xcodeproj/project.pbxproj
            sed -i '' 's/CODE_SIGN_STYLE = "Automatic";/CODE_SIGN_STYLE = "Manual";/g' Pods/Pods.xcodeproj/project.pbxproj
            sed -i '' 's/CODE_SIGNING_REQUIRED = YES;/CODE_SIGNING_REQUIRED = NO;/g' Pods/Pods.xcodeproj/project.pbxproj
            sed -i '' 's/CODE_SIGNING_ALLOWED = YES;/CODE_SIGNING_ALLOWED = NO;/g' Pods/Pods.xcodeproj/project.pbxproj
        fi
        
        echo "‚úÖ Code signing disabled for all targets"
    
    - name: Install iOS dependencies
      run: |
        cd ios/App
        pod install --repo-update
    
    - name: Configure iOS build settings
      run: |
        cd ios/App
        # Update bundle identifier and version
        /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier com.qaonline.app" App/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName QA-Online" App/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ github.ref_name == 'main' && '1.0.0' || github.ref_name }}" App/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ github.run_number }}" App/Info.plist
    
    - name: Build iOS app
      run: |
        cd ios/App
        # Clean previous builds
        xcodebuild clean -workspace App.xcworkspace -scheme App -configuration Release
        
        # Build archive without code signing
        xcodebuild archive \
          -workspace App.xcworkspace \
          -scheme App \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          DEVELOPMENT_TEAM="${{ secrets.APPLE_TEAM_ID }}" \
          PRODUCT_BUNDLE_IDENTIFIER="com.qaonline.app" \
          CODE_SIGN_STYLE="Manual" \
          CODE_SIGN_IDENTITY="" \
          PROVISIONING_PROFILE_SPECIFIER="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          CURRENT_PROJECT_VERSION="${{ github.run_number }}" \
          MARKETING_VERSION="1.0.0" \
          CODE_SIGN_KEYCHAIN="build.keychain"
        
        # Export IPA using minimal options
        echo "üì¶ Exporting IPA..."
        xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportPath . \
          -exportOptionsPlist exportOptions-minimal.plist
    
    - name: Verify IPA file
      run: |
        cd ios/App
        if [ ! -f "App.ipa" ]; then
          echo "‚ùå IPA file was not created!"
          exit 1
        fi
        echo "‚úÖ IPA file created successfully"
        ls -la App.ipa
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
    
    - name: Install Fastlane
      run: |
        gem install fastlane
    
    - name: Skip App Store Connect upload (unsigned build)
      run: |
        echo "‚ö†Ô∏è Skipping App Store Connect upload - build is unsigned"
        echo "üì± IPA file will be available as artifact for testing"
        echo "üîê To upload to App Store Connect, code signing must be enabled"
        echo "üì¶ Next step: Add proper code signing certificates"
    
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app-store-ipa-${{ github.run_number }}
        path: ios/App/App.ipa
        retention-days: 90
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: QA-Online iOS App ${{ github.ref_name }}
        body: |
          ## QA-Online iOS App Release ${{ github.ref_name }}
          
          ### What's New
          - iOS app build for App Store distribution
          - Automated build and deployment
          
          ### Build Information
          - Build Number: ${{ github.run_number }}
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}
          
          ### Installation
          Download the IPA file from the artifacts or install from TestFlight.
        draft: false
        prerelease: false
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `‚úÖ iOS build completed successfully!
          
          **Build Information:**
          - Build Number: ${context.runNumber}
          - IPA: Available as artifact
          - Status: Ready for App Store Connect`
          })
